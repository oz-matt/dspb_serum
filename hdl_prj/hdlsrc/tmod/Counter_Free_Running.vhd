-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\tmod\Counter_Free_Running.vhd
-- Created: 2020-03-17 21:18:51
-- 
-- Generated by MATLAB 9.4 and HDL Coder 3.12
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.0001
-- Target subsystem base rate: 0.0001
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.0001
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- y                             ce_out        0.0001
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Counter_Free_Running
-- Source Path: tmod/Counter Free-Running
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Counter_Free_Running IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        y                                 :   OUT   std_logic_vector(10 DOWNTO 0)  -- ufix11
        );
END Counter_Free_Running;


ARCHITECTURE rtl OF Counter_Free_Running IS

  -- Component Declarations
  COMPONENT Wrap_To_Zero
    PORT( U                               :   IN    std_logic_vector(10 DOWNTO 0);  -- ufix11
          Y                               :   OUT   std_logic_vector(10 DOWNTO 0)  -- ufix11
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Wrap_To_Zero
    USE ENTITY work.Wrap_To_Zero(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL Output_out1                      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Increment_Real_World_out1        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Wrap_To_Zero_out1                : std_logic_vector(10 DOWNTO 0);  -- ufix11
  SIGNAL Wrap_To_Zero_out1_unsigned       : unsigned(10 DOWNTO 0);  -- ufix11

BEGIN
  u_Wrap_To_Zero : Wrap_To_Zero
    PORT MAP( U => std_logic_vector(Increment_Real_World_out1),  -- ufix11
              Y => Wrap_To_Zero_out1  -- ufix11
              );

  enb <= clk_enable;

  Increment_Real_World_out1 <= Output_out1 + to_unsigned(16#001#, 11);

  Wrap_To_Zero_out1_unsigned <= unsigned(Wrap_To_Zero_out1);

  Output_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Output_out1 <= to_unsigned(16#000#, 11);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Output_out1 <= Wrap_To_Zero_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Output_process;


  y <= std_logic_vector(Output_out1);

  ce_out <= clk_enable;

END rtl;

